(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{367:function(t,r,v){"use strict";v.r(r);var _=v(43),s=Object(_.a)({},(function(){var t=this,r=t.$createElement,v=t._self._c||r;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"https加密过程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#https加密过程"}},[t._v("#")]),t._v(" HTTPS加密过程")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/1/5/160c5b10d3f27e00?imageView2/0/w/1280/h/960/format/webp/ignore-error/1",alt:"img"}})]),t._v(" "),v("ol",[v("li",[v("strong",[t._v("客户端发起HTTPS请求")]),t._v(" 这个没什么好说的，就是用户在浏览器里输入一个"),v("code",[t._v("HTTPS")]),t._v("网址，然后连接到服务端的443端口。")]),t._v(" "),v("li",[v("strong",[t._v("服务端的配置")]),t._v(" 采用"),v("code",[t._v("HTTPS")]),t._v("协议的服务器必须要有一套数字证书，可以自己制作，也可以向组织申请。区别就是自己颁发的证书需要客户端验证通过，才可以继续访问，而使用受信任的公司申请的证书则不会弹出提示页面。这套证书其实就是一对公钥和私钥。如果对公钥不太理解，可以想象成一把钥匙和一个锁头，只是世界上只有你一个人有这把钥匙，你可以把锁头给别人，别人可以用这个锁把重要的东西锁起来，然后发给你，因为只有你一个人有这把钥匙，所以只有你才能看到被这把锁锁起来的东西。")]),t._v(" "),v("li",[v("strong",[t._v("传送证书")]),t._v(" 这个证书其实就是公钥，只是包含了很多信息，如证书的颁发机构，过期时间等等。")]),t._v(" "),v("li",[v("strong",[t._v("客户端解析证书")]),t._v(" 这部分工作是由客户端的SSL/TLS来完成的，首先会验证公钥是否有效，比如颁发机构，过期时间等等，如果发现异常，则会弹出一个警示框，提示证书存在的问题。如果证书没有问题，那么就生成一个***随机值***。然后用证书（也就是公钥）对这个随机值进行加密。就好像上面说的，把随机值用锁头锁起来，这样除非有钥匙，不然看不到被锁住的内容。")]),t._v(" "),v("li",[t._v("**传送加密信息 ** 这部分传送的是用证书加密后的随机值，目的是让服务端得到这个随机值，以后客户端和服务端的通信就可以通过这个随机值来进行加密解密了。")]),t._v(" "),v("li",[v("strong",[t._v("服务端解密信息")]),t._v(" 服务端用私钥解密后，得到了客户端传过来的随机值，然后把内容通过该随机值进行对称加密，将信息和私钥通过某种算法混合在一起，这样除非知道私钥，不然无法获取内容，而正好客户端和服务端都知道这个私钥，所以只要加密算法够彪悍，私钥够复杂，数据就够安全。")]),t._v(" "),v("li",[v("strong",[t._v("传输加密后的信息")]),t._v(" 这部分信息就是服务端用私钥加密后的信息，可以在客户端用随机值解密还原。")]),t._v(" "),v("li",[v("strong",[t._v("客户端解密信息")]),t._v(" 客户端用之前生产的私钥解密服务端传过来的信息，于是获取了解密后的内容。整个过程第三方即使监听到了数据，也束手无策。")])])])}),[],!1,null,null,null);r.default=s.exports}}]);